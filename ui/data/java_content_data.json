[
  {
    "id" : "1",
    "name":"Java",
    "subtitle": "Sun Oracle",
    "image": "",
    "link":"/technologies/java",
    "data": "<div class='entry-content'><p>Here we discuss basic concepts surrounding Java, they are terms and principles that surround java as a language.</p><h2><strong>JDK vs JRE</strong></h2><p><strong>JRE</strong> &#8211; Java Runtime Environment &#8211; environment to enable java applications to run.</p><p><strong>JDK</strong> &#8211; Java Development Toolkit &#8211; everything need to develop a java application, which in turns includes a runtime environment (JRE)</p><p><strong>JVM</strong> &#8211; Java Virtual Machine, is an abstract concept of the machine, it is required to run java applications. JRE is the actual implementation of the JVM with libraries etc.</p><h2><strong>Stack vs Heap</strong></h2><p><strong>Heap </strong>&#8211; objects created globally for the application resides in the heap. References are pointed inside the heap. <em>Strings are created here in the heap.</em></p><p><strong>Stack </strong>&#8211; are for short lived memory allocation, for example, variables created in a loop, or in a method that are no longer accessible once the method/loop ends.</p><p>(not my image)<img class='alignnone size-full wp-image-365' src='http://sysdotoutdotprint.com/wp-content/uploads/2017/08/ss1.png' alt='' width='807' height='591' /></p><h2><strong>Just In Time Compiler</strong></h2><p>Java uses JIT Compiler or Just In Time Compiler, which runs after the program has started. Traditionally for an EXE file, it gathers all the necessary things before executing the application. In Contrast, Java has dynamic access to runtime information.</p><p>https://en.wikipedia.org/wiki/Just-in-time_compilation:</p><blockquote><p> The JIT compiler reads the bytecodes in many sections (or in full, rarely) and compiles them dynamically into machine language so the program can run faster. This can be done per-file, per-function or even on any arbitrary code fragment; the code can be compiled when it is about to be executed (hence the name &#8220;just-in-time&#8221;), and then cached and reused later without needing to be recompiled.</p></blockquote><p>&nbsp;</p></div>"
  }

]